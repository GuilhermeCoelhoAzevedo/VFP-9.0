lcIMAGEM = GETFILE('JPG')
lnALTURAFINAL = 5000
lnLARGURAFINAL = 5000

DO REDIMENSIONAIMG WITH lcIMAGEM, lnALTURAFINAL, lnLARGURAFINAL, .T.


PROC REDIMENSIONAIMG
LPARAMETERS tcIMAGEM, tnALTURAFINAL, tnLARGURAFINAL, tlSOREDUZIR
*tcIMAGEM 		= CAMINHO DA IMAGEM A SER REDIMENDIONADA
*tnALTURAFINAL	= ALTURA FINAL ESPERADA DEPOIS DO REDIMENSIONAMENTO
*tnLARGURAFINAL	= LARGURA FINAL ESPERADA DEPOIS DO REDIMENSIONAMENTO
		IF VARTYPE(tcIMAGEM) <> 'C'
			tcIMAGEM=''
		ENDIF
		IF NOT FILE(tcIMAGEM)
			RETURN .F.
		ENDIF
		IF VARTYPE(tnALTURAFINAL) <> 'N'
			 tnALTURAFINAL = 0
		ELSE
			tnALTURAFINAL	= MAX(tnALTURAFINAL,10)
		ENDIF	
		IF VARTYPE(tnLARGURAFINAL) <> 'N'
			 tnLARGURAFINAL= 0
		ELSE
			tnLARGURAFINAL = MAX(tnLARGURAFINAL,10)
		ENDIF
		IF VARTYPE(tlSOREDUZIR) <> 'L'
			tlSOREDUZIR= .F.
		ENDIF
		DO SYSTEM
		
		LOCAL loGDI AS XFCSYSTEM
		LOCAL loIMAGEM AS XFCBITMAP
		LOCAL loGFX AS XFCGRAPHICS
		LOCAL loENCODEPAR AS XFCENCODER
		LOCAL loENCODE AS XFCENCODER
		LOCAL lnLARGURA, lnALTURA AS INTEGER
		WITH _SCREEN.System.Drawing AS XFCDRAWING
			loGDI = _SCREEN.SYSTEM.Drawing.Bitmap.New(tcIMAGEM)
			
			lnLARGURAIMG	= loGDI.Width
			lnALTURAIMG		= loGDI.Height

			IF tlSOREDUZIR
				*SÓ REDUZ A IMAGEM E REDIMENSIONA PROPORCIONALMENTE
				DO CASE
					CASE (lnLARGURAIMG <= tnLARGURAFINAL) AND (lnALTURAIMG <=tnALTURAFINAL)
						*DUAS DIMENSÕES MENORES, ELE RETONA A PROPRIA IMAGEM
						RETURN tcIMAGEM
					CASE (lnLARGURAIMG < tnLARGURAFINAL) AND (lnALTURAIMG > tnALTURAFINAL)
						*LARGURA MENOR E ALTURA MAIOR
						lnPROP = (tnALTURAFINAL/lnALTURAIMG)
						lnALTURAIMG		= tnALTURAFINAL
						lnLARGURAIMG	= lnLARGURAIMG*lnPROP
					CASE (lnLARGURAIMG > tnLARGURAFINAL) AND (lnALTURAIMG < tnALTURAFINAL)
						*LARGURA MAIOR E ALTURA MENOR
						lnPROP = (tnLARGURAFINAL/lnLARGURAIMG)
						lnALTURAIMG		= lnALTURAIMG*lnPROP
						lnLARGURAIMG	= tnLARGURAFINAL

					CASE (lnLARGURAIMG > tnLARGURAFINAL) AND (lnALTURAIMG > tnALTURAFINAL)
						*LARGURA MAIOR E ALTURA MAIOR
						IF (lnLARGURAIMG - tnLARGURAFINAL) >= (lnALTURAIMG - tnALTURAFINAL)
							lnPROP = (tnLARGURAFINAL/lnLARGURAIMG)
							lnALTURAIMG		= lnALTURAIMG*lnPROP
							lnLARGURAIMG	= tnLARGURAFINAL
						ELSE
							lnPROP = (tnALTURAFINAL/lnALTURAIMG)
							lnALTURAIMG		= tnALTURAFINAL
							lnLARGURAIMG	= lnLARGURAIMG*lnPROP
						ENDIF
				ENDCASE	
			ENDIF
			
			loIMAGEM = _SCREEN.SYSTEM.Drawing.Bitmap.New(lnLARGURAIMG, lnALTURAIMG, _SCREEN.SYSTEM.Drawing.Imaging.PixelFormat.Format32bppARGB)
			loIMAGEM.SetResolution(loGDI.HorizontalResolution, loGDI.VerticalResolution)
			loGFX = _SCREEN.SYSTEM.Drawing.Graphics.FromImage(loIMAGEM)
			loGFX.DRAWIMAGE(loGDI, 0, 0, lnLARGURAIMG, lnALTURAIMG)	
			loENCODEPAR = .Imaging.EncoderParameters.New(1)
			loENCODE = .Imaging.EncoderParameter.New(.Imaging.Encoder.Quality, 60)
			loENCODEPAR.Param.Add(loENCODE)
			lcCAMINHOIMAGEM = FULLPATH('NOVA.JPG')
			loIMAGEM.Save(lcCAMINHOIMAGEM , _SCREEN.SYSTEM.Drawing.Imaging.ImageFormat.JPEG, loENCODEPAR)
		ENDWITH			
ENDFUNC